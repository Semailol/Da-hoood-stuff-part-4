

if not game["Loaded"] or not game:GetService("Players")["LocalPlayer"] then
    game["Loaded"]:Wait()
    game:WaitForChild(game:GetService("Players"))
    game:GetService("Players"):WaitForChild(game:GetService("Players").LocalPlayer.Name)
    repeat
        game:GetService("RunService").RenderStepped:Wait()
    until game:GetService("Players").LocalPlayer.Character
end
if game.PlaceId == 2788229376 then
local  MyStand = "Felkusama"
local SuperJumpEnabled = false

local NextA,WatchA = 6961399550,6961400034

getgenv().Toggled = false
local UIS = game:GetService("UserInputService")
UIS.InputBegan:connect(function(input,gameProcessed)

	if input.UserInputType == Enum.UserInputType.Keyboard then

        if input.KeyCode == Enum.KeyCode.C and UIS:GetFocusedTextBox() == nil and getgenv().Toggled == true then
        local A_1 = "Are you watching me!?"; local A_2 = "All";local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest;Event:FireServer(A_1, A_2)
        play(WatchA,true,true)
        
        elseif input.KeyCode == Enum.KeyCode.V and UIS:GetFocusedTextBox() == nil and getgenv().Toggled == true then

        local A_1 = "You are next."; local A_2 = "All";local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest;Event:FireServer(A_1, A_2)
        play(NextA,true,true)

        elseif input.KeyCode == Enum.KeyCode.H then
			if UIS:GetFocusedTextBox() == nil then
				if getgenv().Toggled == false then
					getgenv().Toggled = true
				else
					getgenv().Toggled = true
				end;end;end;end;end)

local LocalPlayer = game:GetService("Players").LocalPlayer
local Cookies = LocalPlayer.Character:WaitForChild("Humanoid"):LoadAnimation(game.ReplicatedStorage.ClientAnimations.Roll)
local OriginalKeyUpValue = 0
local Anim = Instance.new("Animation" )
Anim.AnimationId = "rbxassetid://2788290270"
local CoreUI = Instance.new("ScreenGui")
CoreUI.Parent = game.CoreGui
local SaveLocation = nil
local RigWalk = nil
local RigIdle = nil
local InTimeErase = false

local Pointing = Instance.new("Animation", game.ReplicatedStorage.ClientAnimations)
Pointing.AnimationId = "rbxassetid://507770453"

local Poter = LocalPlayer.Character:WaitForChild("Humanoid"):LoadAnimation(Pointing)
Poter.Looped = true
Poter.Priority = Enum.AnimationPriority.Action

local WalkAnimation = Instance.new("Animation", game.ReplicatedStorage.ClientAnimations)
WalkAnimation.AnimationId = "rbxassetid://2510198475"

local Idle = Instance.new("Animation", game.ReplicatedStorage.ClientAnimations)
Idle.AnimationId = "rbxassetid://507766388"

local OldChar = LocalPlayer.Character

function FoV()
	local fov = coroutine.wrap(function()
		local Camera = workspace.Camera
		for i = 1, 20 do
			Camera.FieldOfView = 8*i
			wait(0.01)
		end
		for i = 1, 20 do
			Camera.FieldOfView = 160-i*4.5
			wait(0.01)
		end
	end)
	fov()
end

local WalkSpeed = false

function Lighting()
	if game.Lighting:FindFirstChild("ERASE") == nil then
		local sound5 = Instance.new("Sound", CoreUI)
		sound5.Volume = 0.1
		sound5.Name = "ERASE"
		sound5.Looped = true
		sound5.SoundId = "rbxassetid://3167092959"
		sound5:Play()

		game.Lighting.Sky.Parent = workspace
		game:GetObjects("rbxassetid://6546113226")[1].Parent=game.Lighting

	else
		workspace.Sky.Parent = game.Lighting
		CoreUI:FindFirstChild("ERASE"):Destroy()
		game.Lighting:FindFirstChild("ERASE"):Destroy()
	end
end

function TimeEraseUI()
	local sound5 = Instance.new("Sound", CoreUI)
	sound5.Volume = 0.1
	sound5.SoundId = "rbxassetid://6546128175"
	sound5:Play()

	local Image = Instance.new("ImageLabel", CoreUI)
	Image.Image = "http://www.roblox.com/asset/?id=6546043746"
	Image.BackgroundTransparency = 1
	Image.AnchorPoint = Vector2.new(0.5, 0.5)
	Image.Size = UDim2.fromScale(1, 1)
	Image.Position = UDim2.fromScale(-0.5, 0.5)
	delay(0, function()
		for i = 0, 1, 0.1 do
			Image.Position = UDim2.fromScale(-Image.Position.X.Scale+i, 0.5)
			Image.ImageTransparency = Image.ImageTransparency+i
			wait(.01)
		end
		Image:Destroy()
		sound5:Destroy()
	end)
end


function ModelCharacter()
	if workspace:FindFirstChild(LocalPlayer.Name.."StringKOD") == nil then
		local MODEL = Instance.new("Model", workspace)
		MODEL.Name = LocalPlayer.Name.."StringKOD"

		OldChar.Humanoid:UnequipTools()

		for i, v in pairs(OldChar:GetChildren()) do 
			if (v:IsA("BasePart")  or v:IsA("MeshPart")) and v.Parent:FindFirstChildOfClass("Humanoid") and v.Name ~= "HumanoidRootPart" then
				local Part = v:Clone()
				Part.Parent = MODEL
				Part.Name = v.Name
				Part.Material = Enum.Material.ForceField
				Part.CFrame = v.CFrame
				Part.Transparency = 0.5 
				Part.BrickColor = BrickColor.Red()
				Part.CanCollide = false
				Part.Anchored = true
				for i, v  in pairs(Part:GetChildren()) do 
					if v.ClassName ~= "SpecialMesh" then
						v:Destroy()
					end
				end
			end
		end
		local NewCharacter = game:GetObjects("rbxassetid://6547055500")[1]
		NewCharacter.Parent = MODEL
		NewCharacter.Name = "Idaro"

		workspace.Camera.CameraSubject = NewCharacter.Humanoid
		SaveLocation = OldChar.HumanoidRootPart.CFrame
		InTimeErase = true
		NewCharacter.HumanoidRootPart.CFrame = SaveLocation

		RigIdle = NewCharacter:WaitForChild("Humanoid"):LoadAnimation(Idle)
		RigIdle.Looped = true
		RigIdle.Priority = Enum.AnimationPriority.Action
		RigWalk = NewCharacter:WaitForChild("Humanoid"):LoadAnimation(WalkAnimation)
		RigWalk.Looped = true
		RigWalk.Priority = Enum.AnimationPriority.Action
		WalkSpeed = true
		RigIdle:Play()
	else
		InTimeErase = false
		WalkSpeed = false
		workspace.Camera.CameraSubject =  OldChar.Humanoid
		OldChar.HumanoidRootPart.CFrame =  workspace:FindFirstChild(LocalPlayer.Name.."StringKOD").Idaro.HumanoidRootPart.CFrame
		workspace:FindFirstChild(LocalPlayer.Name.."StringKOD"):Destroy()
	end
end

function Slide()
	local XD = OldChar.Humanoid:LoadAnimation(Anim)
	XD:Play()
	XD.TimePosition = 0.15
	XD.Looped = false
	XD:AdjustSpeed(1.1)
end

function AddVelocity(Vel, Char)
	Char.HumanoidRootPart.Velocity = Char.HumanoidRootPart.Velocity+Vel
end

local IsJump = false

function Jumping()
	if IsJump == false then
		return false
	else
		return true
	end
end

local Mouse = LocalPlayer:GetMouse()

assert(getrawmetatable)
gmt = getrawmetatable(game)
setreadonly(gmt, false)
old = gmt.__namecall
gmt.__namecall =
	newcclosure(
		function(self, ...)
		local args = {...}
		if tostring(args[1]) == "TeleportDetect" then
			return
		elseif tostring(args[1]) == "CHECKER_1" then
			return
		elseif tostring(args[1]) == "CHECKER" then
			return
		end

		return old(self, ...)
	end
	)


local MoveDirection = Vector3.new(0,0,0)
local WSpped = 0 
local LeftSpeed = 0
local UpSpeed = 0

function IdleRigXD()
	if RigIdle and RigWalk.IsPlaying and WSpped == 0 and LeftSpeed == 0 and UpSpeed == 0 then
		RigIdle:Play()
		RigWalk:Stop()
	end
end

function WalkRigXD()
	if RigWalk and RigIdle.IsPlaying then
		RigIdle:Stop()
		RigWalk:Play()
	end
end

Mouse.KeyDown:Connect(function(KeyDownXD)
	if workspace:FindFirstChild(LocalPlayer.Name.."StringKOD") then
		if KeyDownXD == "w" then
			WSpped = -1
			WalkRigXD()
		elseif KeyDownXD == "a" then
			LeftSpeed = -1
			WalkRigXD()
		elseif KeyDownXD == "d" then
			LeftSpeed = 1
			WalkRigXD()
		elseif KeyDownXD == "s" then
			WSpped = 1
			WalkRigXD()
		end
	end
end)

Mouse.KeyUp:Connect(function(KeyDownXD)
	if KeyDownXD == "w" then
		WSpped = 0
		IdleRigXD()
	elseif KeyDownXD == "a" then
		LeftSpeed = 0
		IdleRigXD()
	elseif KeyDownXD == "d" then
		LeftSpeed = -0
		IdleRigXD()
	elseif KeyDownXD == "s" then
		WSpped = 0
		IdleRigXD()
	end
end)

local CD = false
local uis = game:GetService("UserInputService")

uis.InputBegan:Connect(function(i, XD)
	if i.KeyCode == Enum.KeyCode.H and XD == false then
		if SuperJumpEnabled == false then
			SuperJumpEnabled = true
		elseif SuperJumpEnabled == true then
			SuperJumpEnabled = false
		end
	end
end)

uis.InputBegan:Connect(function(i, XD)
	if i.KeyCode == Enum.KeyCode.Space and XD == false then
		if workspace:FindFirstChild(LocalPlayer.Name.."StringKOD") == nil then
			if Jumping() == true and not Poter.IsPlaying then
				AddVelocity(OldChar.HumanoidRootPart.CFrame.LookVector*150, OldChar)
				IsJump = false
				Cookies:Stop()
				CD = true
				play(6543434995, true, true)
				Slide()
				repeat wait() until workspace:FindPartOnRayWithWhitelist(Ray.new(OldChar.HumanoidRootPart.Position, Vector3.new(0, -4 * OldChar.HumanoidRootPart.Size.y, 0)), { workspace.MAP })
				CD = false
			end
		else
			workspace:FindFirstChild(LocalPlayer.Name.."StringKOD"):FindFirstChild("Idaro").Humanoid:ChangeState(3)
		end
	end
end)

local Player = game:GetService("Players").LocalPlayer
local Character = Player.Character
local Root = Character.HumanoidRootPart 
local ply = game.Players.LocalPlayer
local chr = ply.Character

plr = game.Players.LocalPlayer
 
hum = plr.Character.HumanoidRootPart
 
mouse = plr:GetMouse()
 
 
 
mouse.KeyDown:connect(function(key)
 
if key == "x" then

    
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -50)
        play(6603980575, true, true)
    
    
end 
end)

local Player = game:GetService("Players").LocalPlayer
local Character = Player.Character
local Root = Character.HumanoidRootPart 
local ply = game.Players.LocalPlayer
local chr = ply.Character

plr = game.Players.LocalPlayer
 
hum = plr.Character.HumanoidRootPart
 
mouse = plr:GetMouse()
 
 
 
mouse.KeyDown:connect(function(key)
 
if key == "p" then

local chr = game.Players.LocalPlayer.Character
--Torso
chr.LowerTorso:Destroy()
chr.UpperTorso:Destroy()
--



--Humanoid
chr.Humanoid:Destroy()
---



--Head
chr.Head:Destroy()
---







--arms and some shit

chr.LeftHand:Destroy()
chr.RightHand:Destroy()
chr.LeftLowerArm:Destroy()
chr.RightLowerArm:Destroy()
chr.LeftUpperArm:Destroy()
chr.RightUpperArm:Destroy()
--yes
chr.LeftFoot:Destroy()
chr.RightFoot:Destroy()
chr.LeftLowerLeg:Destroy()
chr.RightLowerLeg:Destroy()
chr.LeftUpperLeg:Destroy()
chr.RightUpperLeg:Destroy()
--
for i,v in pairs(game.Players.Benoxav.Character:GetChildren()) do
				if v.ClassName == 'Accessory' then
					v.Handle:Destroy()
				end
			end 
end
end)

function StopAudio()
	OldChar.LowerTorso.BOOMBOXSOUND:Stop()
end

function stop(ID, Key)
	local cor = coroutine.wrap(function()
		wait(OldChar.LowerTorso.BOOMBOXSOUND.TimeLength-0.1)
		if OldChar.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OriginalKeyUpValue == Key then
			StopAudio()
		end
	end)
	cor()
end


function play(ID, STOP, LMAO)
	if LocalPlayer.Backpack:FindFirstChild("[Boombox]") then
		local Tool = nil
		if OldChar:FindFirstChildOfClass("Tool") and LMAO == true then
			Tool = OldChar:FindFirstChildOfClass("Tool")
			OldChar:FindFirstChildOfClass("Tool").Parent = LocalPlayer.Backpack
		end
		LocalPlayer.Backpack["[Boombox]"].Parent =
			OldChar
		game.ReplicatedStorage.MainEvent:FireServer("Boombox", ID)
		OldChar["[Boombox]"].RequiresHandle = false
		if OldChar["[Boombox]"]:FindFirstChild("Handle") then
			OldChar["[Boombox]"].Handle:Destroy()
		end
		OldChar["[Boombox]"].Parent =
			LocalPlayer.Backpack
		LocalPlayer.PlayerGui.MainScreenGui.BoomboxFrame.Visible = false
		if Tool ~= true then
			if Tool then
				Tool.Parent = OldChar
			end
		end
		if STOP == true then
			OldChar.LowerTorso:WaitForChild("BOOMBOXSOUND")
			local cor = coroutine.wrap(function()
				repeat wait() until OldChar.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OldChar.LowerTorso.BOOMBOXSOUND.TimeLength > 0.01
				OriginalKeyUpValue = OriginalKeyUpValue+1
				stop(ID, OriginalKeyUpValue)
			end)
			cor()
		end
	end
end

local TimeErase, CanCel = "Time erase!", "Time erase!"
local XD = false
LocalPlayer.Chatted:Connect(function(MSG)
	if MSG:sub(1, 11) == TimeErase and XD == false and not Poter.IsPlaying then
		XDDDD(XD)
	elseif MSG == CanCel and XD == true and not Poter.IsPlaying then
		XDDDD(XD)
	end
end)

function XDDDD(XDR)
	if XDR == false then
		XD = true
		play(6546133414, true, true)
		wait(1.5)
		TimeEraseUI()
		FoV()
		Lighting()
		ModelCharacter()
		for i, v in pairs(game.Workspace.MAP:GetDescendants()) do
			if v:IsA("BasePart") or v:IsA("WedgePart") or v:IsA("Part") or v:IsA("BallPart") or v:IsA("MeshPart") or v:IsA("Decal") or v:IsA("Texture") then
				v.Transparency = v.Transparency+1
			end
		end
	else
		XD = false
		InTimeErase = false
		play(6543435253, true, true)
		TimeEraseUI()
		ModelCharacter()
		Lighting()
		FoV()
		for i, v in pairs(game.Workspace.MAP:GetDescendants()) do
			if v:IsA("BasePart") or v:IsA("WedgePart") or v:IsA("Part") or v:IsA("BallPart") or v:IsA("MeshPart") or v:IsA("Decal") or v:IsA("Texture") then
				v.Transparency = v.Transparency-1
			end
		end
	end
end


function Jump(...)
	(...).Jumping:Connect(function()
		if SuperJumpEnabled == true then
		if CD == false and not Poter.IsPlaying then
			CD = true
			delay(1, function()
				CD = false
			end)
			Cookies:Play(0, 1, 1.4)
			AddVelocity(OldChar.HumanoidRootPart.CFrame.UpVector*120, OldChar)
			play(6543436906, true, true)
			delay(0, function()
				IsJump = true
				wait(1) 
				if IsJump == true then
					IsJump = false
				end
			end)
			end
		end
	end)
end


Jump(OldChar.Humanoid)

LocalPlayer.CharacterAdded:Connect(function(Character)
	wait(1)
	if Character.Name == LocalPlayer.Name then
		Jump(Character.Humanoid)
		Poter = Character:WaitForChild("Humanoid"):LoadAnimation(Pointing)
		Poter.Looped = true
		Poter.Priority = Enum.AnimationPriority.Action

		Cookies = Character:WaitForChild("Humanoid"):LoadAnimation(game.ReplicatedStorage.ClientAnimations.Roll)
		OldChar = Character
	end
end)

game["Run Service"].Heartbeat:Connect(function()
	if InTimeErase then
		for i, v in pairs(OldChar:GetChildren()) do
			if v:IsA("BasePart") then
				v.CFrame = CFrame.new(math.random(200, 500), math.random(200, 500), math.random(200, 500))
				v.Velocity = Vector3.new(0,0,0)
			end
		end

		if OldChar:FindFirstChild("Combat") and XD == true then
			XD = false
			XDDDD(true)
		end

		if WalkSpeed == true then
			MoveDirection = Vector3.new(LeftSpeed, UpSpeed, WSpped)
			workspace:FindFirstChild(LocalPlayer.Name.."StringKOD"):FindFirstChild("Idaro").Humanoid:Move(MoveDirection, true)
		end
	else
		if OldChar:FindFirstChild("[Flashlight]") then
			if workspace.Players:FindFirstChild(MyStand) then
				if not Poter.IsPlaying then
					Poter:Play()
					Poter:AdjustSpeed(0)
					Poter.TimePosition = 1.2
				end
				local lol = workspace.Players:FindFirstChild(MyStand).HumanoidRootPart.CFrame * CFrame.new(0, 0.5, 1.25)
				OldChar.HumanoidRootPart.CFrame = lol
			end
		else
			if Poter.IsPlaying then
				Poter:Stop()
			end
		end
	end
end)
getgenv().Transform = "Transform!"
getgenv().Titan = "Rage!"
getgenv().DashLoad = "LOADDASH"
getgenv().Stand = "/e stand"
getgenv().DragonMode = "/e dragonmode"
getgenv().HideMask = "/e hidemask"
getgenv().SafeTp = "/safetp"
getgenv().Revive = "/revive"

--toggle
local standmode = false
local dragonmode = false
local bulletdef = false
local dashtoggle = false
local isrevive = false
local isstped = false

--end

    local backpack = game.Players.LocalPlayer:FindFirstChild("Backpack")
    local Tool = backpack:FindFirstChild("OverDrive") or game.Players.LocalPlayer.Character:FindFirstChild("OverDrive")
    if not Tool then
        local OverDrive = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
        OverDrive.Name = "OverDrive"
        OverDrive.RequiresHandle = false
        local overdrive = false
        local ps = game:GetService("Players")
        local lp = ps.LocalPlayer
        local char = lp.Character
        OverDrive.Activated:Connect(function()
            if overdrive == true then
                overdrive = false
                char.BodyEffects.Movement.HulkJump:Destroy()
                char.BodyEffects.Movement.SuperSpeed:Destroy()
            elseif overdrive == false then
                overdrive = true
                local HulkJump = Instance.new("IntValue")
                HulkJump.Name = "HulkJump"
                HulkJump.Parent = char.BodyEffects.Movement
                local SuperSpeed = Instance.new("IntValue")
                SuperSpeed.Name = "SuperSpeed"
                SuperSpeed.Parent = char.BodyEffects.Movement
        end
    end)
end

local OriginalKeyUpValue = 0
function StopAudio()
	if game:GetService("Players").LocalPlayer.Character.LowerTorso:FindFirstChild("BOOMBOXSOUND") then
		game:GetService("Players").LocalPlayer.Character.LowerTorso.BOOMBOXSOUND:Stop()
	end
end
function stop(ID, Key)
	local cor = coroutine.wrap(function()
		wait(game:GetService("Players").LocalPlayer.Character.LowerTorso.BOOMBOXSOUND.TimeLength-0.1)
		if game:GetService("Players").LocalPlayer.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and OriginalKeyUpValue == Key then
			StopAudio()
		end
	end)
	cor()
end
function play(ID, STOP, LMAO)
	if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("[Boombox]") then
		local Tool = nil
		if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool") and LMAO == true then
			Tool = game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool")
			game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool").Parent = game:GetService("Players").LocalPlayer.Backpack
		end
		game:GetService("Players").LocalPlayer.Backpack["[Boombox]"].Parent =
			game:GetService("Players").LocalPlayer.Character
		game.ReplicatedStorage.MainEvent:FireServer("Boombox", ID)
		game:GetService("Players").LocalPlayer.Character["[Boombox]"].RequiresHandle = false
		if game:GetService("Players").LocalPlayer.Character["[Boombox]"]:FindFirstChild("Handle") then
			game:GetService("Players").LocalPlayer.Character["[Boombox]"].Handle:Destroy()
		end
		game:GetService("Players").LocalPlayer.Character["[Boombox]"].Parent =
			game:GetService("Players").LocalPlayer.Backpack
		game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.BoomboxFrame.Visible = false
		if Tool ~= true then
			if Tool then
				Tool.Parent = game:GetService("Players").LocalPlayer.Character
			end
		end
		if STOP == true then
			game:GetService("Players").LocalPlayer.Character.LowerTorso:WaitForChild("BOOMBOXSOUND")
			local cor = coroutine.wrap(function()
				repeat wait() until game:GetService("Players").LocalPlayer.Character.LowerTorso.BOOMBOXSOUND.SoundId == "rbxassetid://"..ID and game:GetService("Players").LocalPlayer.Character.LowerTorso.BOOMBOXSOUND.TimeLength > 0.01
				OriginalKeyUpValue = OriginalKeyUpValue+1
				stop(ID, OriginalKeyUpValue)
			end)
			cor()
		end
	end
end

local oldc = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
game:GetService('Players').LocalPlayer.Chatted:Connect(function(msg)
	if msg == getgenv().Stand then
		standmode = true
		if standmode then
			local Animate = game.Players.LocalPlayer.Character.Animate
			Animate.idle.Animation1.AnimationId = "rbxassetid://7318630720"
			Animate.idle.Animation2.AnimationId = "rbxassetid://7318630720"
			Animate.run.RunAnim.AnimationId = "rbxassetid://657564596"
			Animate.walk.WalkAnim.AnimationId = "rbxassetid://657552124"
			Animate.climb.ClimbAnim.AnimationId = "rbxassetid://658360781"
			Animate.fall.FallAnim.AnimationId = "rbxassetid://657600338"
			Animate.swim.Swim.AnimationId = "rbxassetid://657560551"
			Animate.swimidle.SwimIdle.AnimationId = "rbxassetid://657557095"
			game.Players.LocalPlayer.Character.Humanoid.Jump = true
		else 
			standmode = false
		end
	elseif msg == getgenv().DragonMode then
		if dragonmode then
			dragonmode = false
		end
		dragonmode = true
	elseif msg == getgenv().Transform then   
		if bulletdef == false then
			bulletdef = true
			local bulletids = {
				"5185157119";
				"5185157257";
			}
			local Humanoid = game.Players.LocalPlayer.Character.Humanoid
			local OldHealth = Humanoid.Health
			Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
				if bulletdef == true then
					if Humanoid.Health < OldHealth then
						play(bulletids[math.random(1,#bulletids)], true, true)
					end
					OldHealth = Humanoid.Health
				end
			end)
		elseif bulletdef == true then
			bulletdef = false
		end
	elseif msg == getgenv().DashLoad then
		if dashtoggle == false then
			dashtoggle = true
			local Char = game.Players.LocalPlayer.Character local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")
			while dashtoggle do wait()
				for i,v in next, Hum:GetPlayingAnimationTracks() do
					if v.Animation.AnimationId == "rbxassetid://2788289281" then
						v:Stop()
						for i,v in next, Hum:GetPlayingAnimationTracks() do
							if v.Animation.AnimationId == "rbxassetid://2788292075" then
								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -30)
								wait(0.1)
								game:GetService('Players').LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = true;
								wait(1.5)
								game:GetService('Players').LocalPlayer.Character:FindFirstChild('HumanoidRootPart').Anchored = false
							end
						end
					end
				end
			end
		else
			dashtoggle = false
		end
	elseif msg == getgenv().HideMask then  
		if game.Players.LocalPlayer.Character:FindFirstChild('In-gameMask'):FindFirstChild('Handle') then
			game.Players.LocalPlayer.Character:FindFirstChild('In-gameMask'):FindFirstChild('Handle'):Destroy()
		end
	elseif msg == getgenv().SafeTp then
		if isstped == false then
			isstped = true
			oldc = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
			wait(0.75)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(207, 38, 200016)
		elseif isstped then
			isstped = false
			wait(0.75)
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldc
		end
	elseif msg == getgenv().Revive then
		if isrevive == false then
			isrevive = true
			game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("I'm back!", "All")
			while isrevive do
				wait()
				for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
					if v.Name == "GRABBING_CONSTRAINT" then
						v:Destroy()
						game.Players.LocalPlayer.Character.Humanoid.Sit = true
						wait(0.2)
						game.Players.LocalPlayer.Character.Humanoid.Jump = true
					end
				end
			end
		else 
			isrevive = false
		end
	end
end)
game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.Bar.HP.Picture.Life.Visible = true
end
